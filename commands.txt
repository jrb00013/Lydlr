# =========================================
# ROS 2 + Docker Workspace Setup Guide
# Target: MacOS with Docker and ROS 2 Humble
# =========================================

# -----------------------------------------
# 1. Pull ROS 2 Docker Image
# -----------------------------------------
docker pull osrf/ros:humble-desktop

# -----------------------------------------
# 2. Run ROS 2 Container with Volume Mount
# -----------------------------------------
docker run -it --name ros2_ai \
    -v ~/Documents/lydlr:/root/lydlr \
    osrf/ros:humble-desktop


Start there directly:
docker exec -it ros2_ai bash -c "cd /root/lydlr/lydlr_ws && bash"

Re-Run:
docker start -ai ros2_ai
cd /root/lydlr/lydlr_ws

# -----------------------------------------
# 3. Source ROS 2 Environment
# Inside the running container:
# -----------------------------------------
source /opt/ros/humble/setup.bash

# -----------------------------------------
# 4. Create a New Workspace
# Only run once (unless starting over)
# -----------------------------------------
mkdir -p /root/lydlr/lydlr_ws/src
cd /root/lydlr/lydlr_ws
colcon build --symlink-install
source install/setup.bash

# -----------------------------------------
# 5. Create a New Package
# Inside src/ directory of workspace
# -----------------------------------------
cd /root/lydlr/lydlr_ws/src

ros2 pkg create --build-type ament_python \
    --dependencies rclpy std_msgs sensor_msgs \
    -- lydlr_ai

# If you forget `--`, it will think your package name is a dependency.

# -----------------------------------------
# 6. Build the Workspace
# -----------------------------------------
cd /root/lydlr/lydlr_ws
colcon build --symlink-install

# -----------------------------------------
# 7. Source the Workspace
# -----------------------------------------
source install/setup.bash

# -----------------------------------------
# 8. Create Your Python Node
# Edit this file:
# /root/lydlr/lydlr_ws/src/lydlr_ai/lydlr_ai/your_node.py
# Add a main() function

# -----------------------------------------
# 9. Register Your Node
# In lydlr_ai/setup.py, add:
# -----------------------------------------
entry_points={
    'console_scripts': [
        'your_node = lydlr_ai.your_node:main',
    ],
},

# -----------------------------------------
# 10. Rebuild & Run the Node
# -----------------------------------------
cd /root/lydlr/lydlr_ws
colcon build --symlink-install
source install/setup.bash

ros2 run lydlr_ai your_node

# -----------------------------------------
# 11. Stopping & Restarting Container
# -----------------------------------------
# Exit container:
exit

# Stop:
docker stop ros2_ai

# Start again:
docker start -ai ros2_ai

# Or run a new terminal into container:
docker exec -it ros2_ai bash

# -----------------------------------------
# 12. Deleting Container (if needed)
# -----------------------------------------
docker stop ros2_ai
docker rm ros2_ai


# Sending Test Topic for ROS2 Publishing

ros2 topic pub /camera/image_raw sensor_msgs/msg/Image "{
  header: {frame_id: 'fake_camera'},
  height: 3,
  width: 2,
  encoding: 'mono8',
  is_bigendian: 0,
  step: 2,
  data: [0, 50, 100, 150, 200, 255]
}"